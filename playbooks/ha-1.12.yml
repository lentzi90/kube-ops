---
- hosts: masters[1:]
  become: yes
  become_user: root
  serial: 1
  tasks:
    - name: Create config directory for kubeadm
      file:
        path: /etc/kubeadm
        state: directory

    - name: Render kubeadm config
      template:
        src: kubeadm-config.yaml.j2
        dest: /etc/kubeadm/kubeadm-config.yaml

    - name: Bootstrap kubelet
      command: "{{ item }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
      with_items:
        - kubeadm alpha phase certs all --config /etc/kubeadm/kubeadm-config.yaml
        - kubeadm alpha phase kubelet config write-to-disk --config /etc/kubeadm/kubeadm-config.yaml
        - kubeadm alpha phase kubelet write-env-file --config /etc/kubeadm/kubeadm-config.yaml
        - kubeadm alpha phase kubeconfig kubelet --config /etc/kubeadm/kubeadm-config.yaml

    - name: Start kubelet
      systemd:
        name: kubelet
        state: started

    - name: Start etcd
      command: kubeadm alpha phase etcd local --config /etc/kubeadm/kubeadm-config.yaml
      args:
        creates: /etc/kubernetes/manifests/etcd.yaml
      register: etcd_manifest

    - name: Wait for first etcd pod to become ready
      command: >
        kubectl --kubeconfig /etc/kubernetes/admin.conf -n kube-system get pods
          -o jsonpath='{.items[?(@.metadata.name=="etcd-{{ groups.masters.0 }}")].status.conditions[?(@.type=="Ready")].status}'
      register: etcd_status
      until: etcd_status.stdout == "True"
      retries: 30

    - name: Join etcd cluster
      command: >
        kubectl exec --kubeconfig /etc/kubernetes/admin.conf -n kube-system
          etcd-{{ groups.masters.0 }} --
            etcdctl --ca-file /etc/kubernetes/pki/etcd/ca.crt
            --cert-file /etc/kubernetes/pki/etcd/peer.crt
            --key-file /etc/kubernetes/pki/etcd/peer.key
            --endpoints=https://{{ hostvars[groups.masters.0].ansible_host }}:2379
            member add {{ ansible_hostname }} https://{{ ansible_host }}:2380
      when: etcd_manifest is changed

    - name: Wait for etcd to become ready
      command: >
        kubectl --kubeconfig /etc/kubernetes/admin.conf -n kube-system get pods
          -o jsonpath='{.items[?(@.metadata.name=="etcd-{{ ansible_hostname }}")].status.conditions[?(@.type=="Ready")].status}'
      register: etcd_status
      until: etcd_status.stdout == "True"
      retries: 30

    - name: Create kubeconfigs
      command: kubeadm alpha phase kubeconfig all --config /etc/kubeadm/kubeadm-config.yaml

    - name: Deploy control plane
      command: kubeadm alpha phase controlplane all --config /etc/kubeadm/kubeadm-config.yaml
      args:
        creates: /etc/kubernetes/manifests/kube-apiserver.yaml

    - name: Deploy control plane
      command: "{{ item }}"
      with_items:
        - kubeadm alpha phase kubelet config annotate-cri --config /etc/kubeadm/kubeadm-config.yaml
        - kubeadm alpha phase mark-master --config /etc/kubeadm/kubeadm-config.yaml
